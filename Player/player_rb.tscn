[gd_scene load_steps=27 format=3 uid="uid://cycyxhum45x03"]

[ext_resource type="Texture2D" uid="uid://cwvar1smuw2c8" path="res://Art/PNG/sprites/player/climb/player-climb-1.png" id="2_l5gd2"]
[ext_resource type="Texture2D" uid="uid://bq7rxc317fi5o" path="res://Art/PNG/sprites/player/climb/player-climb-2.png" id="3_fg5b8"]
[ext_resource type="Texture2D" uid="uid://br1e6i5g6frnc" path="res://Art/PNG/sprites/player/climb/player-climb-3.png" id="4_p7exc"]
[ext_resource type="Texture2D" uid="uid://37j86aldktwj" path="res://Art/PNG/sprites/player/crouch/player-crouch-1.png" id="5_4gtjd"]
[ext_resource type="Texture2D" uid="uid://hsikp85syqrr" path="res://Art/PNG/sprites/player/crouch/player-crouch-2.png" id="6_poarv"]
[ext_resource type="Texture2D" uid="uid://cw07fe8yv3iuc" path="res://Art/PNG/sprites/player/hurt/player-hurt-1.png" id="7_hmyiy"]
[ext_resource type="Texture2D" uid="uid://chdl8ttegkdf1" path="res://Art/PNG/sprites/player/hurt/player-hurt-2.png" id="8_5u54y"]
[ext_resource type="Texture2D" uid="uid://c7pedo55vp8yl" path="res://Art/PNG/sprites/player/idle/player-idle-1.png" id="9_qdfne"]
[ext_resource type="Texture2D" uid="uid://iptc5nkxrol3" path="res://Art/PNG/sprites/player/idle/player-idle-2.png" id="10_dstin"]
[ext_resource type="Texture2D" uid="uid://cak3oql7oeav0" path="res://Art/PNG/sprites/player/idle/player-idle-3.png" id="11_nhpkn"]
[ext_resource type="Texture2D" uid="uid://ebx4ag315ink" path="res://Art/PNG/sprites/player/idle/player-idle-4.png" id="12_xy6o6"]
[ext_resource type="Texture2D" uid="uid://ksc4e14a2om2" path="res://Art/PNG/sprites/player/jump/player-jump-1.png" id="13_yq1p7"]
[ext_resource type="Texture2D" uid="uid://cxjtnyjax8cl1" path="res://Art/PNG/sprites/player/jump/player-jump-2.png" id="14_il01g"]
[ext_resource type="Texture2D" uid="uid://bswslj8tl3olq" path="res://Art/PNG/sprites/player/run/player-run-1.png" id="15_yhw0q"]
[ext_resource type="Texture2D" uid="uid://b4vypgqmik41k" path="res://Art/PNG/sprites/player/run/player-run-2.png" id="16_qyn21"]
[ext_resource type="Texture2D" uid="uid://bv0ssmbxu7u6q" path="res://Art/PNG/sprites/player/run/player-run-3.png" id="17_nqkb1"]
[ext_resource type="Texture2D" uid="uid://cgoqwm5hcy1gp" path="res://Art/PNG/sprites/player/run/player-run-4.png" id="18_7o01w"]
[ext_resource type="Texture2D" uid="uid://dpl71ydnpi85s" path="res://Art/PNG/sprites/player/run/player-run-5.png" id="19_1tg7i"]
[ext_resource type="Texture2D" uid="uid://c0y53glrcjnax" path="res://Art/PNG/sprites/player/run/player-run-6.png" id="20_87lea"]
[ext_resource type="AudioStream" uid="uid://bpyko2i13mj0v" path="res://Sound/sound_jump.wav" id="20_jdvfg"]

[sub_resource type="PhysicsMaterial" id="PhysicsMaterial_uk5jh"]
friction = 0.0

[sub_resource type="GDScript" id="GDScript_lnpkw"]
script/source = "class_name PlayerRB extends RigidBody2D

@onready var managerNode = get_parent().get_parent()#get_tree().root

const WALK_ACCEL = 500.0
const WALK_DEACCEL = 500.0
const WALK_MAX_VELOCITY = 140.0
const AIR_ACCEL = 100.0
const AIR_DEACCEL = 100.0
const JUMP_VELOCITY = 480
const STOP_JUMP_FORCE = 450.0
#const MAX_SHOOT_POSE_TIME = 0.3
const MAX_FLOOR_AIRBORNE_TIME = 0.15

var lives
var health
signal lives_depleted
var pos = Vector2(40, 350)

var anim := \"\"
var siding_left := false
var jumping := false
var stopping_jump := false
#var shooting := false

var floor_h_velocity: float = 0.0

var airborne_time: float = 1e20
#var shoot_time: float = 1e20

#var Bullet := preload(\"res://player/bullet.tscn\")
#var Enemy := preload(\"res://enemy/enemy.tscn\")

@onready var sound_jump := $SoundJump
#@onready var sound_shoot := $SoundShoot as AudioStreamPlayer2D
@onready var sprite := $AnimatedSprite2D
#@onready var sprite_smoke := sprite.get_node(^\"Smoke\") as CPUParticles2D
#@onready var animation_player := $AnimationPlayer
#@onready var bullet_shoot := $BulletShoot as Marker2D

func _ready():
	#an old attempt at storing variables
	#GameManager.Player = self
	pass
	

func start():
	#lives = $\"..\".player_lives
	lives = get_parent().lives
	position = pos
	sleeping = false
	#$\".\".position = pos
	show()
	#$CollisionShape2D.disabled = false


func _integrate_forces(state: PhysicsDirectBodyState2D) -> void:
	var velocity := state.get_linear_velocity()
	var step := state.get_step()

	var new_anim := anim
	var new_siding_left := siding_left

	# Get player input.
	var move_left := Input.is_action_pressed(\"ui_left\")
	var move_right := Input.is_action_pressed(\"ui_right\")
	var jump := Input.is_action_pressed(\"ui_up\")
	#var shoot := Input.is_action_pressed(&\"shoot\")
	var spawn := Input.is_action_pressed(\"spawn\")

	if spawn:
		_spawn_enemy_above.call_deferred()

	# Deapply prev floor velocity.
	velocity.x -= floor_h_velocity
	floor_h_velocity = 0.0

	# Find the floor (a contact with upwards facing collision normal).
	var found_floor := false
	var floor_index := -1

	for contact_index in state.get_contact_count():
		var collision_normal = state.get_contact_local_normal(contact_index)

		if collision_normal.dot(Vector2(0, -1)) > 0.6:
			found_floor = true
			floor_index = contact_index

	# A good idea when implementing characters of all kinds,
	# compensates for physics imprecision, as well as human reaction delay.
	#if shoot and not shooting:
	#	_shot_bullet.call_deferred()
	#else:
	#	shoot_time += step

	if found_floor:
		airborne_time = 0.0
	else:
		airborne_time += step # Time it spent in the air.

	var on_floor := airborne_time < MAX_FLOOR_AIRBORNE_TIME

	# Process jump.
	if jumping:
		if velocity.y > 0:
			# Set off the jumping flag if going down.
			jumping = false
		elif not jump:
			stopping_jump = true

		if stopping_jump:
			velocity.y += STOP_JUMP_FORCE * step

	if on_floor:
		# Process logic when character is on floor.
		if move_left and not move_right:
			if velocity.x > -WALK_MAX_VELOCITY:
				velocity.x -= WALK_ACCEL * step
		elif move_right and not move_left:
			if velocity.x < WALK_MAX_VELOCITY:
				velocity.x += WALK_ACCEL * step
		else:
			var xv := absf(velocity.x)
			xv -= WALK_DEACCEL * step
			if xv < 0:
				xv = 0
			velocity.x = signf(velocity.x) * xv

		# Check jump.
		if not jumping and jump:
			velocity.y = -JUMP_VELOCITY
			jumping = true
			stopping_jump = false
			$SoundJump.play()

		# Check siding.
		if velocity.x < 0 and move_left:
			new_siding_left = true
		elif velocity.x > 0 and move_right:
			new_siding_left = false
		if jumping:
			new_anim = \"jump\"
		elif absf(velocity.x) < 0.1:
			#if shoot_time < MAX_SHOOT_POSE_TIME:
			#	new_anim = \"idle_weapon\"
			#else:
				new_anim = \"idle\"
		else:
			#if shoot_time < MAX_SHOOT_POSE_TIME:
			#	new_anim = \"run_weapon\"
			#pass
			#else:
			new_anim = \"run\"
	else:
		# Process logic when the character is in the air.
		if move_left and not move_right:
			if velocity.x > -WALK_MAX_VELOCITY:
				velocity.x -= AIR_ACCEL * step
		elif move_right and not move_left:
			if velocity.x < WALK_MAX_VELOCITY:
				velocity.x += AIR_ACCEL * step
		else:
			var xv := absf(velocity.x)
			xv -= AIR_DEACCEL * step

			if xv < 0:
				xv = 0
			velocity.x = signf(velocity.x) * xv

		if velocity.y < 0:
			#if shoot_time < MAX_SHOOT_POSE_TIME:
			#	new_anim = \"jumping_weapon\"
			#else:
			new_anim = \"jump\"
		else:
			#if shoot_time < MAX_SHOOT_POSE_TIME:
			#	new_anim = \"falling_weapon\"
			#else:
			new_anim = \"crouch\"
			
	if velocity.x != 0:
		$AnimatedSprite2D.flip_h = velocity.x < 0
	# Update siding. doing nothing now
	if new_siding_left != siding_left:
		if new_siding_left:
			pass
			#sprite.scale.x = -1
		else:
			#$AnimatedSprite2D.flip_h = velocity.x > 0
			#sprite.scale.x = 1
			pass

		siding_left = new_siding_left

	# Change animation.
	if new_anim != anim:
		anim = new_anim
		sprite.play(anim)

	#shooting = shoot

	# Apply floor velocity.
	if found_floor:
		floor_h_velocity = state.get_contact_collider_velocity_at_position(floor_index).x
		velocity.x += floor_h_velocity

	# Finally, apply gravity and set back the linear velocity.
	velocity += state.get_total_gravity() * step
	state.set_linear_velocity(velocity)
	
	#print($RayCast2D_left.get_collider(), $RayCast2D_right.get_collider())
	if $RayCast2D_left.get_collider() or $RayCast2D_right.get_collider():
		velocity.y = JUMP_VELOCITY * 0.25
		print(\"collided with opossum\")
		#use collision mask
		if $RayCast2D_left.get_collider():
			print($RayCast2D_left.get_collider())
			$RayCast2D_left.get_collider().emit_smoke()
			$RayCast2D_left.get_collider().queue_free()
		elif $RayCast2D_right.get_collider():
			$RayCast2D_right.get_collider().emit_smoke()
			$RayCast2D_right.get_collider().queue_free()


func _shot_bullet() -> void:
	#shoot_time = 0
	#var bullet := Bullet.instantiate() as RigidBody2D
	var speed_scale: float
	if siding_left:
		speed_scale = -1.0
	else:
		speed_scale = 1.0

	#bullet.position = self.position + bullet_shoot.position * Vector2(speed_scale, 1.0)
	#get_parent().add_child(bullet)

	#bullet.linear_velocity = Vector2(400.0 * speed_scale, -40)

	#sprite_smoke.restart()
	#sound_shoot.play()

	#add_collision_exception_with(bullet) # Make bullet and this not collide.


func _spawn_enemy_above() -> void:
	#var enemy := Enemy.instantiate() as RigidBody2D
	#enemy.position = self.position + 50 * Vector2.UP
	#get_parent().add_child(enemy)
	pass

func _on_water_area_shape_entered(area_rid, area, area_shape_index, local_shape_index):
	lives_depleted.emit()
	print(\"you got wet\")
	#sleeping = true
	hide()
	lives -= 1
	managerNode.lives = lives
	print(lives)
	print($\"..\".lives)
	
	if lives <= 0:
		#go to you lose scene
		managerNode.scene_holder = 2
		managerNode.start = true
		pass
	else:
		#go to main scene
		managerNode.scene_holder = 1
		managerNode.start = true
		print(\"reset\")
		#get_tree().reload_current_scene()


func _on_area_2d_area_entered(area):
	if area.is_in_group(\"projectile\"):
		health -= 1
		area.queue_free()
	pass # Replace with function body.
"

[sub_resource type="SpriteFrames" id="SpriteFrames_j17vp"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("2_l5gd2")
}, {
"duration": 1.0,
"texture": ExtResource("3_fg5b8")
}, {
"duration": 1.0,
"texture": ExtResource("4_p7exc")
}],
"loop": true,
"name": &"climb",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("5_4gtjd")
}, {
"duration": 1.0,
"texture": ExtResource("6_poarv")
}],
"loop": true,
"name": &"crouch",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("7_hmyiy")
}, {
"duration": 1.0,
"texture": ExtResource("8_5u54y")
}],
"loop": true,
"name": &"hurt",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("9_qdfne")
}, {
"duration": 1.0,
"texture": ExtResource("10_dstin")
}, {
"duration": 1.0,
"texture": ExtResource("11_nhpkn")
}, {
"duration": 1.0,
"texture": ExtResource("12_xy6o6")
}],
"loop": true,
"name": &"idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("13_yq1p7")
}, {
"duration": 1.0,
"texture": ExtResource("14_il01g")
}],
"loop": true,
"name": &"jump",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": ExtResource("15_yhw0q")
}, {
"duration": 1.0,
"texture": ExtResource("16_qyn21")
}, {
"duration": 1.0,
"texture": ExtResource("17_nqkb1")
}, {
"duration": 1.0,
"texture": ExtResource("18_7o01w")
}, {
"duration": 1.0,
"texture": ExtResource("19_1tg7i")
}, {
"duration": 1.0,
"texture": ExtResource("20_87lea")
}],
"loop": true,
"name": &"run",
"speed": 5.0
}]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_y1mvm"]
radius = 22.0
height = 64.0

[sub_resource type="CircleShape2D" id="CircleShape2D_6gh7w"]
radius = 7.07107

[sub_resource type="RectangleShape2D" id="RectangleShape2D_c37fj"]
size = Vector2(49, 61)

[node name="PlayerRB" type="RigidBody2D"]
collision_layer = 4
collision_mask = 3
mass = 1.5
physics_material_override = SubResource("PhysicsMaterial_uk5jh")
custom_integrator = true
max_contacts_reported = 4
contact_monitor = true
lock_rotation = true
script = SubResource("GDScript_lnpkw")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
scale = Vector2(3, 3)
sprite_frames = SubResource("SpriteFrames_j17vp")
animation = &"run"
frame_progress = 0.217633

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, 17)
shape = SubResource("CapsuleShape2D_y1mvm")

[node name="Camera2D" type="Camera2D" parent="."]
offset = Vector2(-20, -20)
zoom = Vector2(1.5, 1.5)
limit_left = 0
limit_top = 0

[node name="ground_check" type="Area2D" parent="."]

[node name="ground_collision" type="CollisionShape2D" parent="ground_check"]
position = Vector2(0, 45)
shape = SubResource("CircleShape2D_6gh7w")

[node name="SoundJump" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("20_jdvfg")

[node name="Area2D" type="Area2D" parent="."]
collision_mask = 7

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2(-2.5, 15.5)
shape = SubResource("RectangleShape2D_c37fj")

[node name="RayCast2D_left" type="RayCast2D" parent="."]
position = Vector2(-20, 40)
collision_mask = 2

[node name="RayCast2D_right" type="RayCast2D" parent="."]
position = Vector2(17, 40)
collision_mask = 2

[connection signal="body_entered" from="ground_check" to="." method="_on_ground_check_body_entered"]
[connection signal="body_exited" from="ground_check" to="." method="_on_ground_check_body_exited"]
[connection signal="area_entered" from="Area2D" to="." method="_on_area_2d_area_entered"]
